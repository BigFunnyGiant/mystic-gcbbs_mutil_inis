\; MUTIL configuration file
; -------------------------------------------------------------------------
;
; MUTIL is an automated maintainance and utility program driven by
; configuration files used to perform various tasks upon execution.
;
; The syntax to execute MUTIL is: MUTIL <configuration file>.  If no
; configuration file is supplied, then the program will look for mutil.ini
; in the same directory.  A second parameter -NOSCREEN can be used to turn
; off screen updates but the configuration file parameter MUST be supplied
; ex: mutil mutil.ini -NOSCREEN
;
; Many different configuration files can exist to perform any series of
; tasks supported by MUTIL, or a single configuration can be maintained that
; does everything.  The minimum requirement is the General header with a
; task enabled, and then the specific header for that task that defines its
; options.
;
; Current abilities (enabled/disabled in the General header below):
;
;    - Purge Message bases (by age and max messages)
;    - Pack and renumber message bases
;    - Pack and check integrity of file base listings
;
; The concept here is that you can create your own custom command lines to
; complete any number of tasks.  For example, you could create msgmaint.ini
; which executes message base purge, packing, and reply linking.  Then you
; can simply execute "mutil msgmaint" to kick it off.
; ==========================================================================
; ==========================================================================
; ==========================================================================

[General]

	; list of functions to perform on startup

	PurgeMessageBases  = true
	PackMessageBases   = true
	PackFileBases      = true
        FileSort           = true

	; Set this value if you want to run mutil from a directory other than
	; the root Mystic directory or the mysticbbs environment variable:

	; mystic_directory=c:\mystic\mystic.dat

	; If no directory is specified in the logfile name, mUtil will attempt
	; to use the configured LOGS directory from in Mystic's configuration.
	; Comment out to disable logging completely.

	logfile=mutil.log

	; If set to TRUE (*HIGHLY* recommended for MUTIL) then it will write the
	; log file in increments of 8KB at a time.  If set to FALSE it will write
	; each individual line as it is logged.  This will significantly reduce
	; MUTIL performance if set to FALSE.

	logcache=true

	; Level 1 = basic
	; Level 2 = verbose
	; Level 3 = debug

	loglevel=3

	; logfile time stamp.  defaults to NNN DD HH:II:SS if not set here
	;logstamp = YYYYHHMMHHIISS

	; Log roller type:
	;   0 = Do not roll log files
	;   1 = Roll by number of files/filesize
	;   2 = Roll by number of days

	logtype = 2

	; number of log files to keep (0 to disable log rolling)
	maxlogfiles = 31

	; size of each log file in kilobytes
	maxlogsize = 1500

; ==========================================================================
; ==========================================================================
; ==========================================================================
[PurgeMessageBases]

	; No options for this function

; ==========================================================================
; ==========================================================================
; ==========================================================================
[PackMessageBases]

	; No options for this function

; ==========================================================================
; ==========================================================================
; ==========================================================================
[PackFileBases]

	; If true, MUTIL will check to make sure files exist, and will update their
	; file size in the listing, optionally removing missing files (remove_missing)

	check_files = true

	; If true, MUTIL will remove any files which do not exist from the file
	; list database while checking integrity.  Otherwise they will be flagged as
	; OFFLINE in the file listing.  0 byte files are considered "missing"

	remove_missing = false
